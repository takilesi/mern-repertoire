{"ast":null,"code":"// Import all named exports attached to a usersAPI object\n// This syntax can be helpful documenting where the methods come from\nimport * as usersAPI from './users-api';\nexport async function signUp(userData) {\n  // Delegate the network request code to the users-api.js API module\n  // which will ultimately return a JSON Web Token (JWT)\n  const token = await usersAPI.signUp(userData);\n\n  //PErsist the \"token\"\n  localStorage.setItem('token', token);\n\n  // Baby step by returning whatever is sent back by the server\n  return token;\n}\nexport async function login(credentials) {\n  const token = await usersAPI.login(credentials);\n\n  // Persist the token\n  localStorage.setItem('token', token);\n  return getUser();\n}\nexport function getToken() {\n  // getItem returns null if there's no string\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  // Obtain the payload of the token\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  // A JWT's exp is expressed in seconds, not milliseconds, so convert\n  if (payload.exp < Date.now() / 1000) {\n    // Token has expired - remove it from localStorage\n    localStorage.removeItem('token');\n    return null;\n  }\n  return token;\n}\n\n// export function getUser() {\n//   const token = getToken();\n//   // If there's a token, return the user in the payload, otherwise return null\n//   return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n// }\n\n// export async function login(credentials){\n//   const token = await usersAPI.login(credentials)\n\n//   localStorage.setItem('token', token)\n\n//   return getUser()\n// }\n\nexport function logOut() {\n  localStorage.removeItem('token');\n}","map":{"version":3,"names":["usersAPI","signUp","userData","token","localStorage","setItem","login","credentials","getUser","getToken","getItem","payload","JSON","parse","atob","split","exp","Date","now","removeItem","logOut"],"sources":["/Users/douglasdeckert/PerScholas/93_RTT/mod-three/mern-infrastructure /mern-infrastructure/src/utilities/users-service.js"],"sourcesContent":["// Import all named exports attached to a usersAPI object\n// This syntax can be helpful documenting where the methods come from\nimport * as usersAPI from './users-api';\n\nexport async function signUp(userData) {\n  // Delegate the network request code to the users-api.js API module\n  // which will ultimately return a JSON Web Token (JWT)\n  const token = await usersAPI.signUp(userData);\n\n  //PErsist the \"token\"\n  localStorage.setItem('token', token);\n\n  // Baby step by returning whatever is sent back by the server\n  return token;\n}\n\n\nexport async function login(credentials) {\n  const token = await usersAPI.login(credentials);\n\n  // Persist the token\n  localStorage.setItem('token', token);\n\n  return getUser();\n}\n\nexport function getToken() {\n  // getItem returns null if there's no string\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  // Obtain the payload of the token\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  // A JWT's exp is expressed in seconds, not milliseconds, so convert\n  if (payload.exp < Date.now() / 1000) {\n    // Token has expired - remove it from localStorage\n    localStorage.removeItem('token');\n    return null;\n  }\n  return token;\n}\n\n// export function getUser() {\n//   const token = getToken();\n//   // If there's a token, return the user in the payload, otherwise return null\n//   return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n// }\n\n// export async function login(credentials){\n//   const token = await usersAPI.login(credentials)\n\n//   localStorage.setItem('token', token)\n\n//   return getUser()\n// }\n\nexport function logOut() {\n  localStorage.removeItem('token');\n}"],"mappings":"AAAA;AACA;AACA,OAAO,KAAKA,QAAQ,MAAM,aAAa;AAEvC,OAAO,eAAeC,MAAMA,CAACC,QAAQ,EAAE;EACrC;EACA;EACA,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;;EAE7C;EACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;EAEpC;EACA,OAAOA,KAAK;AACd;AAGA,OAAO,eAAeG,KAAKA,CAACC,WAAW,EAAE;EACvC,MAAMJ,KAAK,GAAG,MAAMH,QAAQ,CAACM,KAAK,CAACC,WAAW,CAAC;;EAE/C;EACAH,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EAEpC,OAAOK,OAAO,CAAC,CAAC;AAClB;AAEA,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB;EACA,MAAMN,KAAK,GAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACP,KAAK,EAAE,OAAO,IAAI;EACvB;EACA,MAAMQ,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,IAAIJ,OAAO,CAACK,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE;IACnC;IACAd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,IAAI;EACb;EACA,OAAOhB,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,OAAO,SAASiB,MAAMA,CAAA,EAAG;EACvBhB,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}