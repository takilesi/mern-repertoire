{"ast":null,"code":"// This is the base path of the Express route we'll define\nconst BASE_URL = '/api/users';\nexport async function signUp(userData) {\n  // Fetch uses an options object as a second arg to make requests\n  // other than basic GET requests, include data, headers, etc.\n  const res = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    // Fetch requires data payloads to be stringified\n    // and assigned to a body property on the options object\n    body: JSON.stringify(userData)\n  });\n  // Check if request was successful\n  if (res.ok) {\n    // res.json() will resolve to the JWT\n    return res.json();\n  } else {\n    throw new Error('Invalid Sign Up');\n  }\n}","map":{"version":3,"names":["BASE_URL","signUp","userData","res","fetch","method","headers","body","JSON","stringify","ok","json","Error"],"sources":["/Users/douglasdeckert/PerScholas/93_RTT/mod-three/mern-infrastructure /mern-infrastructure/src/utilities/users-api.js"],"sourcesContent":["// This is the base path of the Express route we'll define\nconst BASE_URL = '/api/users';\n\nexport async function signUp(userData) {\n  // Fetch uses an options object as a second arg to make requests\n  // other than basic GET requests, include data, headers, etc.\n  const res = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    // Fetch requires data payloads to be stringified\n    // and assigned to a body property on the options object\n    body: JSON.stringify(userData)\n  });\n  // Check if request was successful\n  if (res.ok) {\n    // res.json() will resolve to the JWT\n    return res.json();\n  } else {\n    throw new Error('Invalid Sign Up');\n  }\n}"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,YAAY;AAE7B,OAAO,eAAeC,MAAMA,CAACC,QAAQ,EAAE;EACrC;EACA;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,QAAQ,EAAE;IAChCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/C;IACA;IACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EACF;EACA,IAAIC,GAAG,CAACO,EAAE,EAAE;IACV;IACA,OAAOP,GAAG,CAACQ,IAAI,CAAC,CAAC;EACnB,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}