{"ast":null,"code":"import axios from 'axios';\n\n// This is the base path of the Express route we'll define\nconst BASE_URL = '/api/users';\nexport async function signUp(userData) {\n  // Fetch uses an options object as a second arg to make requests\n  // other than basic GET requests, include data, headers, etc.\n\n  // FETCH\n  //   const res = await fetch(BASE_URL, {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     // Fetch requires data payloads to be stringified\n  //     // and assigned to a body property on the options object\n  //     body: JSON.stringify(userData)\n  //   });\n\n  // AXIOS\n  const res = await axios.post(BASE_URL, userData, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  // Check if request was successful\n  if (res.status === 200) {\n    // res.json() will resolve to the JWT\n    return res.data;\n  } else {\n    throw new Error('Invalid Sign Up');\n  }\n}\nexport async function login(credentials) {\n  // AXIOS\n  const res = await axios.post(`${BASE_URL}/login`, credentials, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  // Check if request was successful\n  if (res.status === 200) {\n    // res.json() will resolve to the JWT\n    return res.data;\n  } else {\n    throw new Error('Invalid Login Up');\n  }\n}","map":{"version":3,"names":["axios","BASE_URL","signUp","userData","res","post","headers","status","data","Error","login","credentials"],"sources":["/Users/douglasdeckert/PerScholas/93_RTT/mod-three/mern-infrastructure /mern-infrastructure/src/utilities/users-api.js"],"sourcesContent":["import axios from 'axios';\n\n// This is the base path of the Express route we'll define\nconst BASE_URL = '/api/users';\n\nexport async function signUp(userData) {\n  // Fetch uses an options object as a second arg to make requests\n  // other than basic GET requests, include data, headers, etc.\n\n  // FETCH\n  //   const res = await fetch(BASE_URL, {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     // Fetch requires data payloads to be stringified\n  //     // and assigned to a body property on the options object\n  //     body: JSON.stringify(userData)\n  //   });\n\n  // AXIOS\n  const res = await axios.post(BASE_URL, userData, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  // Check if request was successful\n  if (res.status === 200) {\n    // res.json() will resolve to the JWT\n    return res.data;\n  } else {\n    throw new Error('Invalid Sign Up');\n  }\n}\n\nexport async function login(credentials) {\n  // AXIOS\n  const res = await axios.post(`${BASE_URL}/login`, credentials, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  // Check if request was successful\n  if (res.status === 200) {\n    // res.json() will resolve to the JWT\n    return res.data;\n  } else {\n    throw new Error('Invalid Login Up');\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,YAAY;AAE7B,OAAO,eAAeC,MAAMA,CAACC,QAAQ,EAAE;EACrC;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,QAAQ,EAAEE,QAAQ,EAAE;IAC/CG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;;EAEF;EACA,IAAIF,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;IACtB;IACA,OAAOH,GAAG,CAACI,IAAI;EACjB,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpC;AACF;AAEA,OAAO,eAAeC,KAAKA,CAACC,WAAW,EAAE;EACvC;EACA,MAAMP,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,QAAO,EAAEU,WAAW,EAAE;IAC7DL,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;;EAEF;EACA,IAAIF,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;IACtB;IACA,OAAOH,GAAG,CAACI,IAAI;EACjB,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;EACrC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}